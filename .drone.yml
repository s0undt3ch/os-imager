---
kind: pipeline
name: Lint

platform:
  os: linux
  arch: amd64

steps:
- name: Arch
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=arch --distro-version=lts
  depends_on:
  - clone

- name: Amazon 1
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=amazon --distro-version=1
  depends_on:
  - clone

- name: Amazon 2
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=amazon --distro-version=2
  depends_on:
  - clone

- name: CentOS 6
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=centos --distro-version=6
  depends_on:
  - clone

- name: CentOS 7
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=centos --distro-version=7
  depends_on:
  - clone

- name: CentOS 8
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=centos --distro-version=8
  depends_on:
  - clone

- name: Debian 8
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=debian --distro-version=8
  depends_on:
  - clone

- name: Debian 9
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=debian --distro-version=9
  depends_on:
  - clone

- name: Debian 10
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=debian --distro-version=10
  depends_on:
  - clone

- name: Fedora 30
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=fedora --distro-version=30
  depends_on:
  - clone

- name: Fedora 31
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=fedora --distro-version=31
  depends_on:
  - clone

- name: Opensuse 15
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=opensuse --distro-version=15
  depends_on:
  - clone

- name: Ubuntu 1604
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=ubuntu --distro-version=1604
  depends_on:
  - clone

- name: Ubuntu 1804
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=ubuntu --distro-version=1804
  depends_on:
  - clone

- name: Windows 2016
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=windows --distro-version=2016
  depends_on:
  - clone

- name: Windows 2019
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=windows --distro-version=2019
  depends_on:
  - clone

---
kind: pipeline
name: Arch (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 45 seconds; sleep 45'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=arch --distro-version=lts --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Amazon 1 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 51 seconds; sleep 51'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=1 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Amazon 2 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 57 seconds; sleep 57'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=2 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: CentOS 6 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 63 seconds; sleep 63'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=6 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: CentOS 7 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 69 seconds; sleep 69'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=7 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: CentOS 8 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 75 seconds; sleep 75'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=8 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Debian 8 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 81 seconds; sleep 81'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=8 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Debian 9 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 87 seconds; sleep 87'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=9 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Debian 10 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 93 seconds; sleep 93'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=10 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Fedora 30 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 99 seconds; sleep 99'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=30 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Fedora 31 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 105 seconds; sleep 105'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=31 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Opensuse 15 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 111 seconds; sleep 111'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=opensuse --distro-version=15 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Ubuntu 1604 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 117 seconds; sleep 117'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1604 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Ubuntu 1804 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 123 seconds; sleep 123'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1804 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Windows 2016 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 39 seconds; sleep 39'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2016 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Windows 2019 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: master
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 39 seconds; sleep 39'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2019 --salt-branch=master
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-master-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat master-manifest.json | jq
  - export name_filter=$(cat master-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - master

node:
  project: open

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: signature
hmac: 33a3e50034a2997c1e4bd6c0ad682df1d719cbd5545855198ce7c9eee97240ca

...
