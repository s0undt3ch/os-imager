---
kind: pipeline
name: Lint

platform:
  os: linux
  arch: amd64

steps:
- name: Arch
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=arch --distro-version=lts
  depends_on:
  - clone

- name: Amazon 1
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=amazon --distro-version=1
  depends_on:
  - clone

- name: Amazon 2
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=amazon --distro-version=2
  depends_on:
  - clone

- name: CentOS 6
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=centos --distro-version=6
  depends_on:
  - clone

- name: CentOS 7
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=centos --distro-version=7
  depends_on:
  - clone

- name: CentOS 8
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=centos --distro-version=8
  depends_on:
  - clone

- name: Debian 8
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=debian --distro-version=8
  depends_on:
  - clone

- name: Debian 9
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=debian --distro-version=9
  depends_on:
  - clone

- name: Debian 10
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=debian --distro-version=10
  depends_on:
  - clone

- name: Fedora 30
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=fedora --distro-version=30
  depends_on:
  - clone

- name: Fedora 31
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=fedora --distro-version=31
  depends_on:
  - clone

- name: Fedora 32
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=fedora --distro-version=32
  depends_on:
  - clone

- name: Opensuse 15
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=opensuse --distro-version=15
  depends_on:
  - clone

- name: Ubuntu 1604
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=ubuntu --distro-version=1604
  depends_on:
  - clone

- name: Ubuntu 1804
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=ubuntu --distro-version=1804
  depends_on:
  - clone

- name: Ubuntu 2004
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=ubuntu --distro-version=2004
  depends_on:
  - clone

- name: Windows 2012r2
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=windows --distro-version=2012r2
  depends_on:
  - clone

- name: Windows 2016
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=windows --distro-version=2016
  depends_on:
  - clone

- name: Windows 2019
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=windows --distro-version=2019
  depends_on:
  - clone

---
kind: pipeline
name: Arch (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 7 seconds; sleep 7'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=arch --distro-version=lts
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Amazon 1 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 14 seconds; sleep 14'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Amazon 2 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 21 seconds; sleep 21'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: CentOS 6 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 28 seconds; sleep 28'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=6
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: CentOS 7 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 35 seconds; sleep 35'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: CentOS 8 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 42 seconds; sleep 42'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=8
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Debian 8 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 49 seconds; sleep 49'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=8
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Debian 9 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 56 seconds; sleep 56'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=9
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Debian 10 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 63 seconds; sleep 63'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=10
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Fedora 30 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 70 seconds; sleep 70'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=30
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Fedora 31 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 77 seconds; sleep 77'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=31
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Fedora 32 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 84 seconds; sleep 84'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=32
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Opensuse 15 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 84 seconds; sleep 84'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=opensuse --distro-version=15
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Ubuntu 1604 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 91 seconds; sleep 91'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1604
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Ubuntu 1804 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 98 seconds; sleep 98'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1804
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Ubuntu 2004 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 105 seconds; sleep 105'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=2004
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Windows 2012r2 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 0 seconds; sleep 0'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2012r2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Windows 2016 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 0 seconds; sleep 0'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2016
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Windows 2019 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - sh -c 'echo Sleeping 0 seconds; sleep 0'

- name: base-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2019
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat manifest.json | jq
  - export name_filter=$(cat manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - base-image

node:
  project: open

trigger:
  branch:
  - master
  event:
  - push

depends_on:
- Lint

---
kind: signature
hmac: 9dd978b81bc09d941606d03421ffa9cbc1a870c086d09f78af52d9fadb1e2abf

...
